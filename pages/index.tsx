import Head from 'next/head'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import { TheBox } from "@decent.xyz/the-box";
import { useConnect } from 'wagmi'

// Get the signer and address via wagmi or configure using ethers
import { useSigner, useAccount } from 'wagmi';
import { ethers } from 'ethers';

const inter = Inter({ subsets: ['latin'] })

export default function Home() {
  const { connect, connectors, error, isLoading, pendingConnector } = useConnect()

  const { data: signer } = useSigner();
  const { address: account } = useAccount();
  console.log({ signer, account });

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div>
          {connectors.map((connector) => (
            <button
              disabled={!connector.ready}
              key={connector.id}
              onClick={() => connect({ connector })}
            >
              {connector.name}
              {!connector.ready && ' (unsupported)'}
              {isLoading &&
                connector.id === pendingConnector?.id &&
                ' (connecting)'}
            </button>
          ))}

          {error && <div>{error.message}</div>}
        </div>

        <TheBox
          className="rounded-lg border shadow-md bg-white"
          signer={signer || null}
          nftParams={{
            address: "0x3007E0eB44222AC69E1D3c93A9e50F9CA73F53a1",
            chainId: 42161,
            paymentToken: ethers.constants.AddressZero,
            mintParams: {
              abi: "function mint(address to,uint256 numberOfTokens) payable",
              params: [account, 1],
              cost: ethers.utils.parseEther("0.00005"),
              endSupply: {
                maxCap: 500,
              },
            },
            title: "Autumn",
            displayCost: "0.0005 ETH"
          }}
          options={{
            allowSecondary: true,
            allowPrimary: true,
            allowBridging: true,
            allowSwapping: true
          }}
          onTxError={() => console.log("Rugged. Blame Elon.")}
          onTxPending={() => console.log("Box is fast so this should be qui")}
          onTxReceipt={() => console.log("Sweet receipt.")}
          apiKey={process.env.NEXT_PUBLIC_DECENT_API_KEY}
        />
      </main>
    </>
  )
}
